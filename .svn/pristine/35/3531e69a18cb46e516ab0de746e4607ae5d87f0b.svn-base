package com.unirio.ppgi.xstream.helper;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import org.apache.commons.lang3.StringUtils;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.unirio.ppgi.xstream.constants.Constant;
import com.unirio.ppgi.xstream.model.Curriculo;
import com.unirio.ppgi.xstream.model.Programa;
import com.unirio.ppgi.xstream.model.Programas;
import com.unirio.ppgi.xstream.model.Qualis;

public class Helper {

	// private static Logger log = Logger.getLogger(Helper.class);

	public static Map<String, Object> obterUnMarShalXml() {
		Map<String, Object> objects = new HashMap<String, Object>();

//		objects.put(Constant.CONTENTS, obtemContents());
//		objects.put(Constant.QUALIS, obtemQualis());
//		objects.put(Constant.PROGRAMAS, obtemProgramas());
		 objects.put(Constant.CURRICULO, obtemCurriculoVitae());

		return objects;
	}

	private static Programa obtemContents() {
		String arquivo = lerArquivo(Constant.DIRETORIO_LOCAL + Constant.CONTENTS_XML_NOME);
		XStream xs = new XStream();
		xs.processAnnotations(Programa.class);
		Programa programa = (Programa) xs.fromXML(arquivo);

		return programa;
	}

	private static Qualis obtemQualis() {
		String arquivo = lerArquivo(Constant.DIRETORIO_LOCAL + Constant.QUALIS_XML_NOME);
		XStream xs = new XStream();
		xs.processAnnotations(Qualis.class);
		Qualis qualis = (Qualis) xs.fromXML(arquivo);

		return qualis;
	}

	private static Programas obtemProgramas() {
		String arquivo = lerArquivo(Constant.DIRETORIO_LOCAL + Constant.PROGRAMAS_XML_NOME);
		XStream xs = new XStream();
		xs.processAnnotations(Programas.class);
		Programas programas = (Programas) xs.fromXML(arquivo);

		return programas;
	}

	private static Curriculo obtemCurriculoVitae() {
		String arquivo = lerArquivo(Constant.DIRETORIO_LOCAL +"0814717344017544/"+Constant.CURRICULO_XML_NOME);
		XStream xs = new XStream();
		xs.processAnnotations(Curriculo.class);
		Curriculo curriculo = (Curriculo) xs.fromXML(arquivo);

		return curriculo;
	}

	private static String lerArquivo(String diretorio) {

		String arquivo = "";
		try {
			FileReader arq = new FileReader(diretorio);
			BufferedReader lerArq = new BufferedReader(arq);

			String linha = lerArq.readLine();
			while (linha != null) {
				arquivo += linha;
				linha = lerArq.readLine();
			}
			arq.close();
		} catch (IOException e) {
			System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
		}
//		System.out.println(arquivo);
		return arquivo;
	}

	public static Map<String, String> obterParametrosEntrada(String[] args) {
		Map<String, String> parametros = null;

		if (args.length > 0) {
			parametros = new HashMap<String, String>();
			if (args.length > 0 && StringUtils.isNotBlank(args[0])) {
				parametros.put(Constant.PROGRAMA, args[0]);
			}
			if (args.length > 1 && StringUtils.isNotBlank(args[1])) {
				parametros.put(Constant.ANO_INICIO, args[1]);
			}
			if (args.length > 2 && StringUtils.isNotBlank(args[2])) {
				parametros.put(Constant.ANO_FIM, args[2]);
			}
		}
		return parametros;

	}

	public static void lerUrl(String urlSt) {

		Properties systemProperties = System.getProperties();
		systemProperties.put("proxyHost", "proxy1.brasilcap.com.br");
		systemProperties.put("proxyPort", "9090");
		systemProperties.put("proxySet", "true");

		try {
			URL url = new URL(urlSt);
			BufferedReader lerArq = new BufferedReader(new InputStreamReader(url.openStream()));
			String linha = lerArq.readLine(); // l� a primeira linha
			while (linha != null) {
				linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
			}
		} catch (IOException e) {
			System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
		}

		System.out.println();
	}

	 public static void lerArquivoComQuebraDeLinha(String diretorio) {
	
	 String nome = diretorio;
	
	 try {
	 FileReader arq = new FileReader(nome);
	 BufferedReader lerArq = new BufferedReader(arq);
	
	 String linha = lerArq.readLine(); // l� a primeira linha
	 // a vari�vel "linha" recebe o valor "null" quando o processo
	 // de repeti��o atingir o final do arquivo texto
	 while (linha != null) {
	 // System.out.printf("%s\n", linha);
	 linha = linha.replace("<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"no\"?>", "");
	 // linha=linha.replace(linha.substring(linha.indexOf("=\""),
	 // linha.indexOf("\"")), "");
	 // System.out.println(linha.replace(" ", "\n "));
	 String novaLinha = linha.replace("\" ", "\"\n").replace(">", ">\n");
	 // String
	 // pNovaLinha=novaLinha.substring(novaLinha.indexOf("=\""),
	 // novaLinha.length());
	 // String
	 // sNovaLinha=novaLinha.substring(novaLinha.indexOf("=\""),
	 // novaLinha.indexOf("\""));
	 // novaLinha =
	 // novaLinha.replace(novaLinha.substring(novaLinha.indexOf("=\""),
	 // novaLinha.indexOf("\"")),
	 // "");
	 System.out.println(novaLinha);
	 linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
	 }
	
	 arq.close();
	 } catch (IOException e) {
	 System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
	 }
	
	 System.out.println();
	 }
	
	 public static void quebraLinha1(String diretorio) {
	
	 String nome = diretorio;
	
	 try {
	 FileReader arq = new FileReader(nome);
	 BufferedReader lerArq = new BufferedReader(arq);
	
	 String linha = lerArq.readLine(); // l� a primeira linha
	 // a vari�vel "linha" recebe o valor "null" quando o processo
	 // de repeti��o atingir o final do arquivo texto
	 while (linha != null) {
	 linha = linha.replace("<?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"no\"?>", "");
	 String novaLinha = linha.replace("\" ", "\"\n").replace(">", ">\n");
	 System.out.println(novaLinha);
	 linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
	 }
	
	 arq.close();
	 } catch (IOException e) {
	 System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
	 }
	
	 System.out.println();
	 }
	
	 public static void limpaValorAtributo2(String diretorio) {
	
	 String nome = diretorio;
	
	 try {
	 FileReader arq = new FileReader(nome);
	 BufferedReader lerArq = new BufferedReader(arq);
	
	 String linha = lerArq.readLine(); // l� a primeira linha
	 while (linha != null) {
	 String novaLinha = linha;
	 if (linha.contains("=\"")) {
	 novaLinha = novaLinha.substring(0, novaLinha.indexOf("=\""));
	 }
	 System.out.println(novaLinha);
	 linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
	 }
	
	 arq.close();
	 } catch (IOException e) {
	 System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
	 }
	
	 System.out.println();
	 }
	
	 public static void quebraLinhaFinal3(String diretorio) {
	
	 String nome = diretorio;
	
	 try {
	 FileReader arq = new FileReader(nome);
	 BufferedReader lerArq = new BufferedReader(arq);
	
	 String linha = lerArq.readLine(); // l� a primeira linha
	 // a vari�vel "linha" recebe o valor "null" quando o processo
	 // de repeti��o atingir o final do arquivo texto
	 while (linha != null) {
	 String novaLinha = linha.replace(" ", ">\n");
	 System.out.println(novaLinha);
	 linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
	 }
	
	 arq.close();
	 } catch (IOException e) {
	 System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
	 }
	
	 System.out.println();
	 }
	
	 public static void lerArquivoComQuebraDeLinhas(String diretorio) {
	
	 String nome = diretorio;
	
	 try {
	 FileReader arq = new FileReader(nome);
	 BufferedReader lerArq = new BufferedReader(arq);
	
	 String linha = lerArq.readLine(); // l� a primeira linha
	 // a vari�vel "linha" recebe o valor "null" quando o processo
	 // de repeti��o atingir o final do arquivo texto
	 while (linha != null) {
	 // System.out.printf("%s\n", linha);
	 int pos = linha.indexOf("=");
	 // Substring iniciando em 0 at� posi��o do caracter especial
	 System.out.println(linha.substring(0, pos));
	 System.out.println(linha.replace("\" ", "\"\nprivate String ").replace("-", ""));
	
	 linha = lerArq.readLine(); // l� da segunda at� a �ltima linha
	 }
	
	 arq.close();
	 } catch (IOException e) {
	 System.err.printf("Erro na abertura do arquivo: %s.\n", e.getMessage());
	 }
	
	 System.out.println();
	 }

}
